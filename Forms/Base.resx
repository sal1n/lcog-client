<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>